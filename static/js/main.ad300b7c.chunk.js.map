{"version":3,"sources":["App.jsx","index.jsx"],"names":["counter","fullGoods","map","good","oneGood","id","App","useState","selectedGood","setSelectedGood","resetButton","goodChecherFunction","condition","firstExp","secondExp","className","type","onClick","value","goodChecher","ReactDOM","render","document","getElementById"],"mappings":"6NAiBIA,EAAU,EAERC,EAfe,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAKsBC,KAAI,SAACC,GAG3B,OAFAH,GAAW,EAEH,CACNI,QAAQ,GAAD,OAAKD,GACZE,GAAIL,MAIKM,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAc,kBAAM,kBAAMD,EAAgB,MAE1CE,EAAsB,SAACC,EAAWC,EAAUC,GAAtB,OAC1BF,EACIC,EACAC,GAGN,OACE,uBAAMC,UAAU,oBAAhB,UACE,qBACEA,UAAU,sCADZ,UAGIP,EAAD,UAEMA,EAFN,gBACG,oBAIHA,GAED,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAASP,SAMb,uBAAOK,UAAU,QAAjB,SACE,gCACGd,EAAUC,KAAI,YAAsB,IA/B3BgB,EA+BQd,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACnBc,EAAcf,IAAYI,EAEhC,OACE,qBACE,UAAQ,OACRO,UACEI,GAAW,UA1CL,gCAuCV,UAQE,6BACE,wBACE,UACER,EACEQ,EACA,eACA,aAGJH,KAAK,SACLD,UACEJ,EAAoBQ,EAzDjB,iBAyD8C,UAEnDF,QACEN,EACEQ,EACAT,GA3DJQ,EA4Dcd,EA5DL,kBAAMK,EAAgBS,MA4CjC,SAqBIP,EAAoBQ,EAAa,IAAK,SAK5C,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGX,MA9BEC,cCxErBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ad300b7c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nlet counter = 0;\n\nconst fullGoods = goods.map((good) => {\n  counter += 1;\n\n  return ({\n    oneGood: `${good}`,\n    id: counter,\n  });\n});\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n  const styleForTable = 'has-background-success-light';\n  const styleForButton = 'button is-info';\n\n  const resetButton = () => () => setSelectedGood('');\n  const setButton = value => () => setSelectedGood(value);\n  const goodChecherFunction = (condition, firstExp, secondExp) => (\n    condition\n      ? firstExp\n      : secondExp\n  );\n\n  return (\n    <main className=\"section container\">\n      <h1\n        className=\"title is-flex is-align-items-center\"\n      >\n        {!selectedGood\n          ? 'No goods selected'\n          : `${selectedGood} is selected`\n\n        }\n        {selectedGood\n        && (\n        <button\n          data-cy=\"ClearButton\"\n          type=\"button\"\n          className=\"delete ml-3\"\n          onClick={resetButton()}\n        />\n        )\n        }\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {fullGoods.map(({ oneGood, id }) => {\n            const goodChecher = oneGood === selectedGood;\n\n            return (\n              <tr\n                data-cy=\"Good\"\n                className={\n                  goodChecher\n                  && `${styleForTable}`\n                }\n                key={id}\n              >\n                <td>\n                  <button\n                    data-cy={\n                      goodChecherFunction(\n                        goodChecher,\n                        'RemoveButton',\n                        'AddButton',\n                      )\n                    }\n                    type=\"button\"\n                    className={\n                      goodChecherFunction(goodChecher, styleForButton, 'button')\n                    }\n                    onClick={\n                      goodChecherFunction(\n                        goodChecher,\n                        resetButton,\n                        setButton(oneGood),\n                      )\n                    }\n                  >\n                    {\n                      goodChecherFunction(goodChecher, '-', '+')\n                    }\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {oneGood}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}